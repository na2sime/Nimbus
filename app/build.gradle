import com.github.spotbugs.snom.SpotBugsReport

plugins {
    id 'pmd'
    id 'java'
    id 'jacoco'
    id 'checkstyle'
    id 'java-library'
    id 'maven-publish'
    id 'com.gradleup.shadow' version '8.3.2'
    id 'com.github.spotbugs' version '5.0.14'
}

java {
    withJavadocJar()
    withSourcesJar()
}

jacocoTestReport {
    reports {
        xml.required = true
        html.required = true
    }
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/na2sime/Nimbus")
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }

    publications {
        gpr(MavenPublication) {
            from components.java

            artifactId = 'nimbus'

            pom {
                name = 'Nimbus'
                description = 'A lightweight Java microframework for building RESTful APIs'
                url = 'https://github.com/na2sime/Nimbus'

                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }

                developers {
                    developer {
                        id = project.findProperty('developer.id') ?: 'na2sime'
                        name = project.findProperty('developer.name') ?: 'Abdiou Nassime'
                        email = project.findProperty('developer.email') ?: 'nassime.abdiou@icloud.com'
                    }
                }

                scm {
                    connection = 'scm:git:git://github.com/na2sime/Nimbus.git'
                    developerConnection = 'scm:git:ssh://github.com/na2sime/Nimbus.git'
                    url = 'https://github.com/na2sime/Nimbus'
                }
            }
        }
    }
}


repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.slf4j:slf4j-simple:2.0.7'

    implementation 'com.fasterxml.jackson.core:jackson-core:2.18.2'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.18.2'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.18.2'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.15.2'

    // Unit test
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.28'
    testImplementation 'org.projectlombok:lombok:1.18.28'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.9.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
    testImplementation 'org.mockito:mockito-core:5.3.1'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.3.1'
    testImplementation 'org.assertj:assertj-core:3.24.2'
}

checkstyle {
    toolVersion = "10.12.3"
    configFile = file("${rootDir}/config/checkstyle/checkstyle.xml")
    maxWarnings = 0
    ignoreFailures = false
}

checkstyleMain {
    source = 'src/main/java'
}

checkstyleTest {
    source = 'src/test/java'
}

spotbugs {
    toolVersion = '4.7.3'
    ignoreFailures = true
    effort = 'default'
    reportLevel = 'medium'
}

spotbugsMain {
    reports(({
        html.required = true
        xml.required = false
    } as Closure<NamedDomainObjectContainer<? extends SpotBugsReport>>))
}

spotbugsTest {
    reports(({
        html.required = true
        xml.required = false
    } as Closure<NamedDomainObjectContainer<? extends SpotBugsReport>>))
}

pmd {
    toolVersion = '6.55.0'
    consoleOutput = true
    ruleSetFiles = files("${rootDir}/config/pmd/ruleset.xml")
    ruleSets = []
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}
