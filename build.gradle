plugins {
    id 'java'
    id 'java-library'
    id 'maven-publish'
    id 'com.gradleup.shadow' version '8.3.2'
}

allprojects {
    group = 'fr.nassime.nimbus'
    version = System.getenv("VERSION") ?: getVersionFromTag()

    apply plugin: 'java'

    repositories {
        mavenCentral()
    }

    tasks.withType(JavaCompile) {
        options.release = 17
    }

    java {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }
}

subprojects {
    dependencies {
        // Core dependencies
        implementation 'org.jetbrains:annotations:24.1.0'
        implementation 'org.slf4j:slf4j-api:2.0.9'
        implementation 'org.reflections:reflections:0.10.2'

        compileOnly "org.projectlombok:lombok:1.18.28"
        annotationProcessor "org.projectlombok:lombok:1.18.28"

        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.0'
        testImplementation 'org.mockito:mockito-core:5.6.0'
    }

    test {
        useJUnitPlatform()
    }
}


def getVersionFromTag() {
    def version = '1.0.1-SNAPSHOT'
    try {
        def stdout = new ByteArrayOutputStream()
        def result = exec {
            commandLine 'git', 'describe', '--tags', '--abbrev=0'
            standardOutput = stdout
            ignoreExitValue = true
        }
        if (result.exitValue == 0) {
            version = stdout.toString().trim().replaceAll("v", "")
        }
    } catch (Exception ignored) {
        println "Could not retrieve version from git tags, using default version: ${version}"
    }
    return version
}


test {
    useJUnitPlatform()
}
