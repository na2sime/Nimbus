name: CI/CD

on:
  push:
    branches: [ develop, main ]
  pull_request:
    branches: [ develop, main ]

jobs:
  quality:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install pre-commit
        run: |
          python -m pip install --upgrade pip
          pip install pre-commit

      - name: Run quality checks
        run: |
          chmod +x ./quality-check.sh
          ./quality-check.sh

  test:
    needs: quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3

      - name: Run tests with coverage
        run: ./gradlew app:test

      - name: Generate coverage report
        run: ./gradlew app:jacocoTestReport

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: 'app/build/reports/jacoco/'
          retention-days: 14

  publish:
    needs: test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/main')
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set Version
        run: |
          VERSION=$(git describe --tags --abbrev=0 | sed 's/^v//')
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3

      - name: Build and Publish package
        run: ./gradlew app:publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
