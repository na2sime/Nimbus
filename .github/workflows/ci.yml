name: CI/CD

on:
  push:
    branches: [ develop, main ]
  pull_request:
    branches: [ develop, main ]

jobs:
  quality:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install pre-commit
        run: |
          python -m pip install --upgrade pip
          pip install pre-commit

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Run quality checks
        run: |
          chmod +x ./quality-check.sh
          ./quality-check.sh

      - name: Run tests
        run: ./gradlew test


  publish:
    needs: quality
    if: github.event_name == 'push' && (github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/main')
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Get version and create tag
        id: get_version
        run: |
          if [ "${{ github.ref }}" = "refs/heads/develop" ]; then
            LAST_TAG=$(git describe --tags --abbrev=0 || echo "v0.0.0")
            VERSION=$(echo ${LAST_TAG#v} | awk -F. '{print $1"."$2"."$3+1}')
            echo "VERSION=${VERSION}-SNAPSHOT" >> $GITHUB_ENV
            git tag -a "v${VERSION}-SNAPSHOT" -m "Development version ${VERSION}-SNAPSHOT"
          else
            LAST_TAG=$(git describe --tags --abbrev=0 | sed 's/-SNAPSHOT//')
            VERSION=${LAST_TAG#v}
            echo "VERSION=${VERSION}" >> $GITHUB_ENV
            git tag -a "v${VERSION}" -m "Release version ${VERSION}"
          fi
          git push --tags

      - name: Build and Publish package
        run: ./gradlew publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
